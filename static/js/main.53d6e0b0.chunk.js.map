{"version":3,"sources":["services/spotify.js","App.js","index.js"],"names":["baseUrl","appleRequest","method","string","token","axios","url","headers","getAppleSongIds","query","a","apiID","appleAuth","createPlay","console","log","id","data","map","track","attributes","name","seen","deleteRepeats","filter","item","hasOwnProperty","returnData","request","createPlaylist","createApplePlaylist","musicUserToken","playName","songIds","fetch","body","JSON","stringify","play","json","addAppleSongs","playID","add","fetchApplePlaylists","require","config","Login","className","Button","onClick","window","location","size","Form","handleClick","handleChange","title","onSubmit","type","onChange","value","Search","setName","setTrack","setError","useState","srch","setSrch","event","preventDefault","spotify","res","artists","tracks","target","ResultList","setQuery","category","setCounter","counters","items","src","album","images","alt","ResultArtistList","Counter","count","Results","setRecs","setDoneSearch","songQuery","setSongQuery","artistQuery","setArtistQuery","artistCount","setArtistCount","songCount","setSongCount","songs","setSongs","DropdownForm","selectedPlay","playlists","CreatePlaylist","recs","userID","setPlayID","setDone","handleChangeCreate","handleClickCreate","trackList","uri","join","handleClickApple","external_ids","isrc","playlist","AddToPlaylist","applePlay","appleToken","setSelectedPlay","handleChangeAdd","handleClickAdd","handleClickAppleAdd","MusicKit","configure","developerToken","app","declarativeMarkup","auth","getInstance","authorize","isAuthorized","Destination","Recommendations","App","setToken","setuserID","doneSearch","done","setPlaylists","setApplePlay","setAppleToken","error","useEffect","href","includes","splitUrl","split","finalSplit","playList","applePlaylists","getToken","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53d6e0b0.chunk.js","sourcesContent":["import axios from 'axios'\nimport apiID from \"../config.json\";\nconst baseUrl = 'https://api.spotify.com/v1/'\nconst appleURL = 'https://api.music.apple.com/v1/'\n\nconst appleRequest = (method, string, token) => {\n    return axios({\n        method: method,\n        url: appleURL+string,\n        headers: {\n            'Authorization': `Bearer ${token}`,\n        }\n    })\n}\n\nconst getAppleSongIds = async (query)=>{\n\n    let createPlay = await appleRequest('GET', `catalog/us/songs?filter[isrc]=${query}`, apiID.appleAuth)\n    console.log(createPlay)\n    let id = createPlay.data.data.map(track=>[track.id, track.attributes.name])\n    let seen = {};\n    let deleteRepeats = id.filter(item => {\n        return seen.hasOwnProperty(item[1]) ? false : (seen[item[1]] = true);\n    })\n    let returnData = deleteRepeats.map(item => {\n        return {\n            \"id\": item[0],\n            \"type\": \"songs\"\n        }\n    })\n    return returnData\n}\n\nconst request = (method, string, token) => {\n    return axios({\n        method: method,\n        url: baseUrl+string,\n        headers: {\n            'Authorization': `Bearer ${token}`,\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\",\n        }\n    })\n}\n\nconst createPlaylist = (name, string, token) => {\n    return axios({\n        method: 'POST',\n        url: baseUrl+string,\n        data: {\n            name: `${name}`\n        },\n        headers: {\n            'Authorization': `Bearer ${token}`,\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\",\n        }\n\n    })\n}\n\nconst createApplePlaylist = async (musicUserToken, playName, songIds) => {\n    console.log(playName, 'playName')\n    console.log(songIds, 'songIds')\n    console.log(musicUserToken, 'musicUser')\n\n    let play =await fetch('https://api.music.apple.com/v1/me/library/playlists',{\n        method: 'POST',\n        headers:{\n            'authorization': \"Bearer \"+ apiID.appleAuth,\n            'music-user-token':musicUserToken\n        },\n        body:JSON.stringify({\n            \"attributes\":{\n                \"name\" : playName,\n                \"description\": \"Created by Playlist Converter\"\n            },\n            \"relationships\":{\n                \"tracks\":{\n                    \"data\": songIds\n                }\n            }\n        })\n    })\n    console.log(play)\n    return play.json()\n\n\n}\n\nconst addAppleSongs = async(playID, musicUserToken, songIds) => {\n     console.log(songIds)\n     let add = fetch('https://api.music.apple.com/v1/me/library/playlists/'+playID+'/tracks', {\n        method: 'POST',\n        headers: {\n            'authorization': \"Bearer \" + apiID.appleAuth,\n            'music-user-token': musicUserToken\n        },\n        body: JSON.stringify( {\n            \"data\":songIds\n        })\n    })\n    return add\n}\n\nconst fetchApplePlaylists = async (musicUserToken) => {\n    console.log(musicUserToken)\n    let add = await fetch('https://api.music.apple.com/v1/me/library/playlists?limit=100', {\n        method: 'GET',\n        headers: {\n            'authorization': \"Bearer \" + apiID.appleAuth,\n            'music-user-token': musicUserToken\n        }\n    })\n    return add.json()\n}\n\n\nexport default {\n    request: request,\n    createPlaylist: createPlaylist,\n    appleRequest: appleRequest,\n    getAppleSongIds: getAppleSongIds,\n    createApplePlaylist: createApplePlaylist,\n    addAppleSongs: addAppleSongs,\n    fetchApplePlaylists: fetchApplePlaylists\n\n}","import React, {useEffect, useState} from 'react';\nimport spotify from './services/spotify'\nimport apiID from './config.json'\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css'\n\n\nrequire('dotenv').config()\n\nconst Login = ()=> {\n    const REACT_APP_CLIENT_ID='52e8d8d4caef421282f7f37369eaa7ea'\n    const REACT_APP_AUTHORIZE_URL='https://accounts.spotify.com/authorize'\n    const REACT_APP_REDIRECT_URL='https://alexoei.github.io/spotifysongrec'\n\n    const handleLogin = () => {\n        window.location = `${REACT_APP_AUTHORIZE_URL}?client_id=${REACT_APP_CLIENT_ID}&redirect_uri=${REACT_APP_REDIRECT_URL}&scope=playlist-modify-public%20playlist-modify-private%20user-read-private%20user-read-email%20playlist-read-private%20playlist-read-collaborative&response_type=token&show_dialog=true`;\n    };\n\n    return (\n\n                    <div className=\"text-center\">\n                        <Button onClick = {handleLogin} id=\"Login\" size=\"lg\"> Login to Spotify </Button>\n                    </div>\n\n    )\n}\n\nconst Form = ({handleClick, handleChange, title}) => {\n    return (\n        <div>\n            <h1>{title}</h1>\n            <form onSubmit = {handleClick}>\n                <input type = \"text\" onChange={handleChange}/>\n                <input type = \"submit\" value = \"submit\" />\n            </form>\n        </div>\n    )\n}\n\nconst Search = ({title, setName, setTrack, token, setError}) => {\n  const [srch, setSrch] = useState('')\n\n  const handleChange = (event) => {\n      event.preventDefault()\n      setSrch(event.target.value)\n  }\n\n  const handleClick = async (event) => {\n      event.preventDefault()\n      try{\n          let res = await spotify.request('GET',`search?q=${srch}&type=artist%2Ctrack&limit=5`, token )\n          setName(res.data.artists)\n          setTrack(res.data.tracks)\n      }catch(error){\n          console.log(error)\n          setError(true)\n      }\n  }\n\n  return (\n      <div className=\"align-content-center\">\n      <Form handleClick={handleClick} handleChange={handleChange} title={title} />\n      </div>\n  )\n}\n\nconst ResultList = ({query, setQuery, category, title, setCounter, counters}) => {\n\n    const handleClick = (id) => {\n        setQuery(query + id +',')\n        setCounter(counters + 1)\n    }\n\n    if (category){\n        console.log(category.items)\n    return(<div>\n        <li>{title}</li>\n        <ul>\n            {category.items.map(category => (\n               <li key={category.id}>{category.name} <img src = {category.album.images[2].url} alt = \"Song Artwork\"/>  <button onClick = {()=>handleClick(category.id)}>Add</button></li>\n\n            ))}\n        </ul>\n\n    </div>)\n    }\n\n    return(<div/>)\n\n}\n\nconst ResultArtistList = ({query, setQuery, category, title, setCounter, counters}) => {\n\n    const handleClick = (id) => {\n        setQuery(query + id +',')\n        setCounter(counters + 1)\n    }\n\n    if (category){\n        console.log(category.items)\n        return(<div>\n            <li>{title}</li>\n            <ul>\n                {category.items.map(category => (\n                    <li key={category.id}>{category.name} <img src ={category.images[2].url} alt = \"Artist Artwork\" />  <button onClick = {()=>handleClick(category.id)}>Add</button></li>\n\n                ))}\n            </ul>\n\n        </div>)\n    }\n\n    return(<div/>)\n\n}\n\nconst Counter = ({count, title}) => {\n\n\n    return (\n        <>\n            <p>{title} added: {count}</p>\n        </>\n    )\n}\n\n\nconst Results = ({name, track, setRecs, token, setDoneSearch, setError}) => {\n    const [songQuery, setSongQuery] = useState('')\n    const [artistQuery, setArtistQuery] = useState('')\n    const [artistCount, setArtistCount] = useState(0)\n    const [songCount, setSongCount] = useState(0)\n    const [songs, setSongs] = useState(20)\n\n\n    const handleChange = (event) => {\n        event.preventDefault()\n        if (event.target.value < 100 && event.target.value > 0){\n            console.log('value accepted')\n            setSongs(event.target.value)\n        }\n\n    }\n\n    const handleClick = async (event) => {\n        event.preventDefault()\n        if (songQuery || artistQuery) {\n            try{\n                let res = await spotify.request('GET', `recommendations?limit=${songs}&seed_artists=${artistQuery}&seed_tracks=${songQuery}`, token)\n                console.log(res)\n                setRecs(res.data)\n                setDoneSearch(true)\n            }catch(error){\n                console.log(error)\n                setError(true)\n            }\n\n        }\n    }\n\n    if(track && name){\n        return(\n            <div>\n                <ul>\n                    <div className=\"align-content-center\">\n                    <Form handleClick={handleClick} handleChange={handleChange} title=\"Choose number of Recs\" />\n                    </div>\n                    <div className=\"counter\" >\n                    <Counter count={artistCount} title=\"Artists\"  />\n                    <Counter count={songCount} title=\"Tracks\"  />\n                    </div>\n                    <div className=\"counter\">\n                    {(<ResultArtistList query={artistQuery} setQuery={setArtistQuery} category={name} setCounter={setArtistCount} counters={artistCount} title=\"Artists\" />)}\n                    {(<ResultList query={songQuery} setQuery={setSongQuery} category={track} setCounter={setSongCount} counters={songCount} title=\"Songs\"  />)}\n                    </div>\n                </ul>\n            </div>\n        )}\n\n    return(<div/>)\n}\n\nconst DropdownForm = ({selectedPlay, handleChange, handleClick, playlists, type, }) => {\n    if(type==='apple'){\n        return(\n            <form>\n                <select value ={selectedPlay} onChange={handleChange}>\n                    <option value = \"none\">None Selected</option>\n                    {playlists.map(track=>(\n                        <option data-testid =\"option\" value={track.id}>{track.attributes.name}</option>\n                    ))}\n                </select>\n                <button onClick={handleClick}>Add to chosen playlist</button>\n            </form>\n        )\n    }\n\n    if (type === 'spotify'){\n        return (\n            <form>\n                <select value ={selectedPlay} onChange={handleChange}>\n                    <option value = \"none\">None Selected</option>\n                    {playlists.items.map(track=>(\n                        <option data-testid =\"option\" value={track.id}>{track.name}</option>\n                    ))}\n                </select>\n                <button onClick={handleClick}>Add to chosen playlist</button>\n            </form>\n        )\n    }\n    return <div/>\n}\n\nconst CreatePlaylist = ({recs, userID, token, setPlayID, setDone, setError}) => {\n    const [srch, setSrch] = useState('')\n\n    const handleChangeCreate = (event) => {\n        event.preventDefault()\n        setSrch(event.target.value)\n    }\n\n    const handleClickCreate = async(event) => {\n        event.preventDefault()\n        try{\n            let trackList = recs.tracks.map(track => track.uri)\n            let query = trackList.join(',')\n            let createPlay = await spotify.createPlaylist(srch, `users/${userID}/playlists`, token)\n            let res = await spotify.request('POST', `playlists/${createPlay.data.id}/tracks?uris=${query}`, token)\n            setPlayID(createPlay.data.id)\n            setDone(true)\n            console.log(\"create play\" , res)\n        }catch(error){\n            console.log(error)\n            setError(true)\n        }\n    }\n\n    const handleClickApple = async(event) => {\n        event.preventDefault()\n        try{\n            let trackList = recs.tracks.map(track => track.external_ids.isrc)\n            let query = trackList.join(',')\n\n            let songIds = await spotify.getAppleSongIds(query)\n            console.log(songIds, 'songIds')\n            let playlist = await spotify.createApplePlaylist(srch, songIds)\n            setPlayID(playlist.data[0].id)\n            console.log('id', playlist.data[0].id)\n            setDone(true)\n            console.log(\"playID\", playlist)\n\n\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    return (\n        <div className=\"destination\">\n            <Form handleClick={handleClickCreate} handleChange={handleChangeCreate} title=\"Create a spotify playlist or select an existing one\" />\n            <Form handleClick={handleClickApple} handleChange={handleChangeCreate} title=\"Create an apple music playlist or select an existing one\" />\n        </div>\n    )\n\n}\n\nconst AddToPlaylist = ({recs, playlists, setPlayID, setDone, token, applePlay, appleToken}) => {\n    const [selectedPlay, setSelectedPlay] = useState('None')\n\n    const handleChangeAdd = (event)=>{\n        event.preventDefault()\n        setSelectedPlay(event.target.value)\n    }\n\n    const handleClickAdd = async(event)=>{\n        event.preventDefault()\n        try{\n            let trackList = recs.tracks.map(track => track.uri)\n            let query = trackList.join(',')\n            let res = await spotify.request('POST', `playlists/${selectedPlay}/tracks?uris=${query}`, token)\n            setPlayID(selectedPlay)\n            setDone(true)\n            console.log(\"add to play\", res)\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    const handleClickAppleAdd = async (event) => {\n        event.preventDefault()\n        try{\n            let trackList = recs.tracks.map(track => track.external_ids.isrc)\n            let query = trackList.join(',')\n            let music = window.MusicKit.configure({\n                developerToken:apiID.appleAuth,\n                app: {\n                    name: 'My Cool Web App'\n                },\n                declarativeMarkup: true\n            });\n            let auth = window.MusicKit.getInstance()\n            let appleToken = await auth.authorize()\n            console.log(appleToken, auth.isAuthorized)\n            let songIds = await spotify.getAppleSongIds(query)\n            console.log(songIds)\n            let res = await spotify.addAppleSongs(selectedPlay,appleToken, songIds)\n            console.log(res)\n            console.log(selectedPlay)\n            setPlayID(selectedPlay)\n            setDone(true)\n        }catch(error){\n\n        }\n    }\n\n    return (\n        <div className=\"destination\">\n            <DropdownForm playlists={playlists} handleChange={handleChangeAdd} handleClick={handleClickAdd} selectedPlay={selectedPlay} type=\"spotify\"/>\n            <DropdownForm playlists={applePlay} handleChange={handleChangeAdd} handleClick={handleClickAppleAdd} selectedPlay={selectedPlay} type=\"apple\"/>\n        </div>\n    )\n\n}\n\nconst Destination = ({recs, token, userID, setDone, setPlayID, playlists, applePlay, appleToken }) => {\n\n    if(recs && token && playlists){\n        console.log(playlists.items)\n        return(\n            <div>\n                <CreatePlaylist recs={recs} setPlayID={setPlayID} setDone={setDone} userID={userID} token={token} appleToken={appleToken}/>\n                <AddToPlaylist recs={recs} playlists={playlists} setDone={setDone} setPlayID={setPlayID} token={token} applePlay={applePlay} appleToken={appleToken}/>\n            </div>\n        )\n    }\n\n    return (<div/>)\n\n}\n\nconst Recommendations = ({recs}) => {\n    if (recs){\n        return(\n            <ul>\n                <li>Track List</li>\n                <ul>\n                    {recs.tracks.map(track=>(\n                        <li key={track.id}>{track.name}<img src = {track.album.images[2].url} alt = \"album art\"/></li>\n                    ))}\n                </ul>\n            </ul>\n        )\n    }\n    return(<div/>)\n}\n\n\nconst App = () => {\n  const [token, setToken] = useState()\n  const [recs, setRecs] = useState()\n  const [name, setName] = useState(null)\n  const [track, setTrack] = useState(null)\n  const [userID, setuserID] = useState()\n  const [doneSearch, setDoneSearch] = useState(false)\n  const [playID, setPlayID] = useState('')\n  const [done, setDone] = useState(false)\n  const [playlists, setPlaylists] = useState()\n  const [applePlay, setApplePlay] = useState()\n  const [appleToken, setAppleToken] = useState()\n  const [error, setError] = useState(false)\n\n  useEffect(()=>{\n      const getToken = async()=> {\n          if(window.location.href.includes(\"access\") )\n          {\n              const splitUrl = window.location.href.split(\"=\")\n              const finalSplit = splitUrl[1].split(\"&\")\n              setToken(finalSplit[0])\n          }\n          let res = await spotify.request('GET', 'me', token)\n          let playList = await spotify.request('GET', `users/${res.data.id}/playlists`, token)\n          setPlaylists(playList.data)\n          setuserID(res.data.id)\n          let music = window.MusicKit.configure({\n              developerToken:apiID.appleAuth,\n              app: {\n                  name: 'My Cool Web App'\n              },\n              declarativeMarkup: true\n          });\n          let auth = window.MusicKit.getInstance()\n          let appleToken = await auth.authorize()\n          console.log(appleToken, auth.isAuthorized)\n          setAppleToken(appleToken)\n          let applePlaylists = await spotify.fetchApplePlaylists(appleToken)\n          setApplePlay(applePlaylists.data)\n          console.log(applePlaylists.data)\n\n      }\n      getToken()\n  }, [token])\n\n  const handleRedirect = () => {\n        window.location = `https://open.spotify.com/playlist/${playID}`\n  }\n  const handleApple = ()=>{\n      window.location = `https://music.apple.com/library/playlist/${playID}`\n  }\n\n  return(\n      <div className=\"text-center\">\n          <div >\n              <div className=\"header\">\n                  <h1 >Spotify Recommendation Finder</h1>\n              </div>\n          </div>\n          {error && <h3>Sorry, something went wrong, please refresh the page</h3>}\n          {!doneSearch && (\n          <>\n\n              {!token && <Login setToken={setToken} />}\n\n              {token && <Search title = \"Search\" setTrack={setTrack} setName={setName} token={token} setError={setError}/>}\n              <Results name={name} track={track}  setRecs={setRecs} token={token} setDoneSearch={setDoneSearch} setError = {setError}/>\n\n\n         </>\n          )\n      }\n          <Destination recs={recs} token={token} userID={userID} setDone = {setDone} setPlayID = {setPlayID} playlists={playlists} applePlay = {applePlay} appleToken = {appleToken}/>\n          {!playID && (<Recommendations recs={recs}/>)}\n          {done && (<><button onClick={handleRedirect}>Listen on Spotify</button> <button>Make Another Playlist</button> <button onClick = {handleApple}>Listen on Apple Music</button></>)}\n          <p>1. Login to Spotify</p>\n          <p>2. Search for songs and artists to base recommendations off of</p>\n          <p>3. Choose how many songs you want</p>\n          <p>4. Add recommendations to an existing playlist or create a new one(Supports Apple Music and Spotify)</p>\n\n      </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <React.StrictMode>\n\n            <App />\n\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}